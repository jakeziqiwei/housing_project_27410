fit.normal2 <- stan(file = "normal3.stan", data = stan.data2, iter = 10000, seed = SEED)
# - Generate histogram for the posterior draws, and compare with the prior and true posterior distributions.
draws3 <- as.data.frame(fit.normal2);
# histogram of the posterior draws
# with prior and true posterior density
ggplot(draws3, aes(x = sigma2)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(caption = "Stan Samples (Case 2)") +
stat_function(fun = function(x){dinvgamma(x, a, b)}, aes(colour = "prior")) +
stat_function(fun = function(x){dinvgamma(x, shape = post.shape.sigma2, rate = post.rate.sigma2)}, aes(colour ="posterior")) +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
stan.data2 <- list(n = 18, y = y, mu = 0, sigma0 = 100,a=a, b=b);
# - fit stan model
fit.normal2 <- stan(file = "normal3.stan", data = stan.data2, iter = 10000, seed = SEED)
# - Generate histogram for the posterior draws, and compare with the prior and true posterior distributions.
draws3 <- as.data.frame(fit.normal2);
# histogram of the posterior draws
# with prior and true posterior density
ggplot(draws3, aes(x = sigma2)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(caption = "Stan Samples (Case 2)") +
stat_function(fun = function(x){dinvgamma(x, a, b)}, aes(colour = "prior")) +
stat_function(fun = function(x){dinvgamma(x, shape = post.shape.sigma2, rate = post.rate.sigma2)}, aes(colour ="posterior")) +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
stan.data2 <- list(n = 18, y = y, mu = 0, sigma0 = 100,a=a, b=b);
# - fit stan model
fit.normal2 <- stan(file = "normal3.stan", data = stan.data2, iter = 10000, seed = SEED)
# - Generate histogram for the posterior draws, and compare with the prior and true posterior distributions.
draws3 <- as.data.frame(fit.normal2);
# histogram of the posterior draws
# with prior and true posterior density
ggplot(draws3, aes(x = draws3$sigma2)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(caption = "Stan Samples (Case 2)") +
stat_function(fun = function(x){dinvgamma(x, a, b)}, aes(colour = "prior")) +
stat_function(fun = function(x){dinvgamma(x, shape = post.shape.sigma2, rate = post.rate.sigma2)}, aes(colour ="posterior")) +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
# - compare stan prediction
# - with R prediction
ypred = list();
# stan prediction
ypred = cbind(ypred = draws3$ypred[20*(1:1000)], type = rep(0, 1000));
# R prediction
temp = cbind(ypred = mu + sqrt(draws3$sigma2) * rnorm(1000), type = rep(1, 1000));
hist(draws3$mu, freq=F);
stan.data2 <- list(n = 18, y = y, mu = 0, sigma0 = 100,a=a, b=b);
# - fit stan model
fit.normal2 <- stan(file = "normal3.stan", data = stan.data2, iter = 10000, seed = SEED)
# - Generate histogram for the posterior draws, and compare with the prior and true posterior distributions.
draws3 <- as.data.frame(fit.normal2);
# histogram of the posterior draws
# with prior and true posterior density
hist(draws3$mu, freq=F);
stan.data2 <- list(n = 18, y = y, mu = 0, sigma0 = 100,a=a, b=b);
# - fit stan model
fit.normal3 <- stan(file = "normal3.stan", data = stan.data2, iter = 10000, seed = SEED)
# - Generate histogram for the posterior draws, and compare with the prior and true posterior distributions.
draws3 <- as.data.frame(fit.normal2);
# histogram of the posterior draws
# with prior and true posterior density
hist(draws3$mu, freq=F);
y = c(29, 27, 34, 40, 22, 28, 14, 35, 26, 35, 12, 30, 23, 17, 11, 22, 23, 33);
ybar = 25.6;
n = 18;
stan.data2 <- list(n = 18, y = y, mu = 0, sigma0 = 100,a=a, b=b);
# - fit stan model
fit.normal3 <- stan(file = "normal3.stan", data = stan.data2, iter = 10000, seed = SEED)
# - Generate histogram for the posterior draws, and compare with the prior and true posterior distributions.
draws3 <- as.data.frame(fit.normal2);
# histogram of the posterior draws
# with prior and true posterior density
hist(draws3$mu, freq=F);
stan.data2 <- list(n = 18, y = y, mu = 0, sigma0 = 100,a=a, b=b);
it.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
stan.data2 <- list(n = 18, y = y, mu = 0, sigma0 = 100,a=a, b=b);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
stan.data2 <- list(n = 18, y = y, mu = 0, sigma0 = 100,a=a, b=b);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data2, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
hist(draws3$mu, freq=F);
y = c(29, 27, 34, 40, 22, 28, 14, 35, 26, 35, 12, 30, 23, 17, 11, 22, 23, 33);
ybar = 25.6;
n = 18
stan.data2 <- list(n = 18, y = y, mu = 0, sigma0 = 100,a=a, b=b);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data2, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
hist(draws3$mu, freq=F);
stan.data2 <- list(n = 18, y = y, mu = 0, sigma0 = 100,a= 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data2, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
hist(draws3$mu, freq=F);
View(draws3)
stan.data3 <- list(n = 18, y = y, mu = 0, sigma0 = 100,a= 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
hist(draws3$mu, freq=F);
View(fit.normal2)
View(fit.normal3)
stan.data3 <- list(n = 18, y = y, mu = 0,a= 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal2.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
hist(draws3$mu, freq=F);
View(draws3)
stan.data3 <- list(n = 18, y = y, mu = 0,a= 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
hist(draws3$mu, freq=F);
## Load R packages
library(tidyr)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = 1)
library(loo)
library(invgamma)
library(ggplot2)
library(gridExtra)
library(bayesplot)
theme_set(bayesplot::theme_default(base_family = "sans"))
library(shinystan)
library(rprojroot)
SEED <- 48927 # set random seed for reproducability
y = c(29, 27, 34, 40, 22, 28, 14, 35, 26, 35, 12, 30, 23, 17, 11, 22, 23, 33);
ybar = 25.6;
n = 18
stan.data3 <- list(n = 18, y = y, mu = 0,a= 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
hist(draws3$mu, freq=F);
View(draws3)
stan.data3 <- list(n = 18, y = y, mu0 = 0,sigma0 = 100, a = 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
hist(draws3$mu, freq=F);
# - compare stan prediction
# - with R prediction
ypred = list();
# stan prediction
ypred = cbind(ypred = draws3$ypred[20*(1:1000)], type = rep(0, 1000));
# R prediction
temp = cbind(ypred = mu + sqrt(draws3$sigma2) * rnorm(1000), type = rep(1, 1000));
# combine
ypred = data.frame(rbind(ypred, temp));
ypred$type = as.factor(ypred$type)
levels(ypred$type) = c("Stan Pred", "R Pred");
ggplot(ypred, aes(x=ypred, y = ..density..)) +
geom_histogram(colour="black", fill="white") +
facet_wrap(~type,nrow=2);
# compare summary statistics
aggregate(ypred, ypred~type, FUN = summary)
# equal tail credible sets
quantile(ypred[1:1000, 1], c(0.025, 0.975))
quantile(ypred[1001:2000, 1], c(0.025, 0.975))
stan.data3 <- list(n = 18, y = y, mu0 = 0,sigma0 = 100, a = 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
ggplot(draws3, aes(x = draws3$sigma2)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(caption = "Stan Samples (Case 2)") +
stat_function(fun = function(x){dinvgamma(x, a, b)}, aes(colour = "prior")) +
stat_function(fun = function(x){dinvgamma(x, shape = post.shape.sigma2, rate = post.rate.sigma2)}, aes(colour ="posterior")) +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
# - compare stan prediction
# - with R prediction
ypred = list();
# stan prediction
ypred = cbind(ypred = draws3$ypred[20*(1:1000)], type = rep(0, 1000));
# R prediction
temp = cbind(ypred = mu + sqrt(draws3$sigma2) * rnorm(1000), type = rep(1, 1000));
# combine
ypred = data.frame(rbind(ypred, temp));
ypred$type = as.factor(ypred$type)
levels(ypred$type) = c("Stan Pred", "R Pred");
ggplot(ypred, aes(x=ypred, y = ..density..)) +
geom_histogram(colour="black", fill="white") +
facet_wrap(~type,nrow=2);
# compare summary statistics
aggregate(ypred, ypred~type, FUN = summary)
# equal tail credible sets
quantile(ypred[1:1000, 1], c(0.025, 0.975))
quantile(ypred[1001:2000, 1], c(0.025, 0.975))
stan.data3 <- list(n = 18, y = y, mu0 = 0,sigma0 = 100, a = 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
ggplot(draws3, aes(x = draws3$sigma2)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(caption = "Stan Samples (Case 2)") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
# - compare stan prediction
# - with R prediction
ypred = list();
# stan prediction
ypred = cbind(ypred = draws3$ypred[20*(1:1000)], type = rep(0, 1000));
# R prediction
temp = cbind(ypred = mu + sqrt(draws3$sigma2) * rnorm(1000), type = rep(1, 1000));
# combine
ypred = data.frame(rbind(ypred, temp));
ypred$type = as.factor(ypred$type)
levels(ypred$type) = c("Stan Pred", "R Pred");
ggplot(ypred, aes(x=ypred, y = ..density..)) +
geom_histogram(colour="black", fill="white") +
facet_wrap(~type,nrow=2);
# compare summary statistics
aggregate(ypred, ypred~type, FUN = summary)
# equal tail credible sets
quantile(ypred[1:1000, 1], c(0.025, 0.975))
quantile(ypred[1001:2000, 1], c(0.025, 0.975))
stan.data3 <- list(n = 18, y = y, mu0 = 0,sigma0 = 100, a = 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
ggplot(draws3, aes(x = draws3$sigma2)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(caption = "Stan Samples (Case 2)") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
ggplot(draws3, aes(x = draws3$mu)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(caption = "Stan Samples (Case 2)") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
# - compare stan prediction
# - with R prediction
ypred = list();
# stan prediction
ypred = cbind(ypred = draws3$ypred[20*(1:1000)], type = rep(0, 1000));
# R prediction
temp = cbind(ypred = mu + sqrt(draws3$sigma2) * rnorm(1000), type = rep(1, 1000));
# combine
ypred = data.frame(rbind(ypred, temp));
ypred$type = as.factor(ypred$type)
levels(ypred$type) = c("Stan Pred", "R Pred");
ggplot(ypred, aes(x=ypred, y = ..density..)) +
geom_histogram(colour="black", fill="white") +
facet_wrap(~type,nrow=2);
# compare summary statistics
aggregate(ypred, ypred~type, FUN = summary)
# equal tail credible sets
quantile(ypred[1:1000, 1], c(0.025, 0.975))
quantile(ypred[1001:2000, 1], c(0.025, 0.975))
ypred = draws3$mu + sqrt(draws3$sigma2) * rnorm(dim(draws3)[1]);
ypredhat = mean(ypred);
ci.lower = quantile(ypred, 0.025);
ci.upper = quantile(ypred, 0.975);
ypred = draws3$mu + sqrt(draws3$sigma2) * rnorm(dim(draws3)[1]);
ypredhat = mean(ypred);
ci.lower = quantile(ypred, 0.025);
ci.upper = quantile(ypred, 0.975);
ci.lower
ci.upper
stan.data3 <- list(n = 18, y = y, mu0 = 0,sigma0 = 100, a = 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
ggplot(draws3, aes(x = draws3$sigma2)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
ggplot(draws3, aes(x = draws3$mu)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of mu") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
# - compare stan prediction
# - with R prediction
ypred = list();
# stan prediction
ypred = cbind(ypred = draws3$ypred[20*(1:1000)], type = rep(0, 1000));
# R prediction
temp = cbind(ypred = mu + sqrt(draws3$sigma2) * rnorm(1000), type = rep(1, 1000));
# combine
ypred = data.frame(rbind(ypred, temp));
ypred$type = as.factor(ypred$type)
levels(ypred$type) = c("Stan Pred", "R Pred");
ggplot(ypred, aes(x=ypred, y = ..density..)) +
geom_histogram(colour="black", fill="white") +
facet_wrap(~type,nrow=2);
# compare summary statistics
aggregate(ypred, ypred~type, FUN = summary)
# equal tail credible sets
quantile(ypred[1:1000, 1], c(0.025, 0.975))
quantile(ypred[1001:2000, 1], c(0.025, 0.975))
stan.data3 <- list(n = 18, y = y, mu0 = 0,sigma0 = 100, a = 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
ggplot(draws3, aes(x = draws3$sigma2)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
ggplot(draws3, aes(x = draws3$mu)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of mu") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
# - compare stan prediction
# - with R prediction
ypred = list();
# stan prediction
ypred = cbind(ypred = draws3$ypred[20*(1:1000)], type = rep(0, 1000));
# R prediction
temp = cbind(ypred = draw3$mu + sqrt(draws3$sigma2) * rnorm(1000), type = rep(1, 1000));
stan.data3 <- list(n = 18, y = y, mu0 = 0,sigma0 = 100, a = 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
ggplot(draws3, aes(x = draws3$sigma2)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
ggplot(draws3, aes(x = draws3$mu)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of mu") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
# - compare stan prediction
# - with R prediction
ypred = list();
# stan prediction
# R prediction
temp = cbind(ypred = draw3$mu + sqrt(draws3$sigma2) * rnorm(dim(draws3)[1];
stan.data3 <- list(n = 18, y = y, mu0 = 0,sigma0 = 100, a = 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
ggplot(draws3, aes(x = draws3$sigma2)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
ggplot(draws3, aes(x = draws3$mu)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of mu") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
# - compare stan prediction
# - with R prediction
ypred = list();
# stan prediction
# R prediction
temp = cbind(ypred = draw3$mu + sqrt(draws3$sigma2) * rnorm(dim(draws3)[1];
stan.data3 <- list(n = 18, y = y, mu0 = 0,sigma0 = 100, a = 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
ggplot(draws3, aes(x = draws3$sigma2)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
ggplot(draws3, aes(x = draws3$mu)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of mu") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
quantile(draws3$mu, probs=c(0.025, 0.975));
quantile(draws3$sigma2, probs=c(0.025, 0.975));
# compare summary statistics
aggregate(ypred, ypred~type, FUN = summary)
stan.data3 <- list(n = 18, y = y, mu0 = 0,sigma0 = 100, a = 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
ggplot(draws3, aes(x = draws3$sigma2)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
ggplot(draws3, aes(x = draws3$mu)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of mu") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
quantile(draws3$mu, probs=c(0.025, 0.975));
quantile(draws3$sigma2, probs=c(0.025, 0.975));
# compare summary statistics
ypred = draws3$mu + sqrt(draws3$sigma2) * rnorm(dim(draws3)[1]);
quantile(ypred[1:1000, 1], c(0.025, 0.975))
stan.data3 <- list(n = 18, y = y, mu0 = 0,sigma0 = 100, a = 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
ggplot(draws3, aes(x = draws3$sigma2)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
ggplot(draws3, aes(x = draws3$mu)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of mu") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
quantile(draws3$mu, probs=c(0.025, 0.975));
quantile(draws3$sigma2, probs=c(0.025, 0.975));
# compare summary statistics
ypred = draws3$mu + sqrt(draws3$sigma2) * rnorm(dim(draws3)[1]);
quantile(ypred,c(0.025, 0.975))
quantile(ypred, c(0.025, 0.975))
# equal tail credible sets
quantile(ypred,c(0.025, 0.025))
stan.data3 <- list(n = 18, y = y, mu0 = 0,sigma0 = 100, a = 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
ggplot(draws3, aes(x = draws3$sigma2)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
ggplot(draws3, aes(x = draws3$mu)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of mu") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
quantile(draws3$mu, probs=c(0.025, 0.975));
quantile(draws3$sigma2, probs=c(0.025, 0.975));
# compare summary statistics
ypred = draws3$mu + sqrt(draws3$sigma2) * rnorm(dim(draws3)[1]);
quantile(ypred,c(0.025, 0.025))
quantile(ypred, c(0.025, 0.975))
# equal tail credible sets
stan.data3 <- list(n = 18, y = y, mu0 = 0,sigma0 = 100, a = 0.0001, b=0.001);
fit.normal3 <- stan(file = "normal3.stan", data = stan.data3, iter = 10000, seed = SEED)
draws3 <- as.data.frame(fit.normal3);
# histogram of the posterior draws
# with prior and true posterior density
ggplot(draws3, aes(x = draws3$sigma2)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of sigma2") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
ggplot(draws3, aes(x = draws3$mu)) +
geom_histogram(aes(y=..density..), colour="black", fill="white") +
labs(subtitle = "Histogram of mu") +
labs(x = '', y = '') +
theme(legend.position = 'bottom') +
scale_colour_manual("", values = c("red", "blue"))
quantile(draws3$mu, probs=c(0.025, 0.975));
quantile(draws3$sigma2, probs=c(0.025, 0.975));
# compare summary statistics
ypred = draws3$mu + sqrt(draws3$sigma2) * rnorm(dim(draws3)[1]);
quantile(ypred,c(0.025, 0.025))
quantile(ypred, c(0.025, 0.975))
# equal tail credible sets
hist(ypred, freq=F)
